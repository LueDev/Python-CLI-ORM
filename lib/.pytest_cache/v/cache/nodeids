[
  "Class Guest in guest.py contains a method \"delete()\" that deletes the instance's corresponding database record",
  "Class Guest in guest.py contains a method \"update()\" that updates an instance's corresponding database record to match its new attribute values.",
  "Class Guest in guest.py contains method \"create()\" that creates a new row in the db using the parameter data and returns an Guest instance.",
  "Class Guest in guest.py contains method \"create_table()\" that creates table \"guests\" if it does not exist.",
  "Class Guest in guest.py contains method \"drop_table()\" that drops table \"guests\" if it exists.",
  "Class Guest in guest.py contains method \"find_by_id()\" that returns a Guest instance corresponding to its db row retrieved by id.",
  "Class Guest in guest.py contains method \"find_by_name()\" that returns an Guest instance corresponding to the db row retrieved by name.",
  "Class Guest in guest.py contains method \"get_all()\" that returns a list of Guest instances for every record in the db.",
  "Class Guest in guest.py contains method \"instance_from_db()\" that takes a db row and creates an Guest instance.",
  "Class Guest in guest.py contains method \"save()\" that saves an Guest instance to the db and sets the instance id.",
  "Class Guest in guest.py test_hotel_property",
  "Class Guest in guest.py test_hotel_property_fk",
  "Class Guest in guest.py test_hotel_property_type",
<<<<<<< HEAD
  "Class Guest in guest.py validates name and hotel id are valid",
  "Class Guest in guest.py validates name property is assigned a string",
  "Class Guest in guest.py validates name property length > 0",
=======
  "Class Guest in guest.py validates job_title property is assigned a string",
  "Class Guest in guest.py validates job_title property length > 0",
  "Class Guest in guest.py validates name and hotel id are valid",
  "Class Guest in guest.py validates name property is assigned a string",
  "Class Guest in guest.py validates name property length > 0",
  "Class Guest in guest.py validates name, job title, hotel id are valid",
>>>>>>> 8460201676b05b7138612dc797f0bd6a52b651f6
  "Class Hotel in hotel.py contain a method \"guests\" that gets the guests for the current Hotel instance",
  "Class Hotel in hotel.py contains a method \"delete()\" that deletes the instance's corresponding db row",
  "Class Hotel in hotel.py contains a method \"update()\" that updates an instance's corresponding db row to match its new attribute values.",
  "Class Hotel in hotel.py contains method \"create()\" that creates a new row in the db using parameter data and returns a Hotel instance.",
  "Class Hotel in hotel.py contains method \"create_table()\" that creates table \"hotels\" if it does not exist.",
  "Class Hotel in hotel.py contains method \"drop_table()\" that drops table \"hotels\" if it exists.",
  "Class Hotel in hotel.py contains method \"find_by_id()\" that returns a Hotel instance corresponding to the db row retrieved by id.",
  "Class Hotel in hotel.py contains method \"find_by_name()\" that returns a Hotel instance corresponding to the db row retrieved by name.",
  "Class Hotel in hotel.py contains method \"get_all()\" that returns a list of Hotel instances for every row in the db.",
  "Class Hotel in hotel.py contains method \"instance_from_db()\" that takes a table row and returns a Hotel instance.",
  "Class Hotel in hotel.py contains method \"save()\" that saves a Hotel instance to the db and assigns the instance an id.",
  "Class Hotel in hotel.py validates location property is assigned a string",
  "Class Hotel in hotel.py validates location property length > 0",
  "Class Hotel in hotel.py validates name and location assigned valid non-empty strings",
  "Class Hotel in hotel.py validates name property is assigned a string",
  "Class Hotel in hotel.py validates name property length > 0"
]